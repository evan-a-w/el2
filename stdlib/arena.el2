module Free_node := {
  type t(a) := { next : &t(a) }
}

module Chunk := {
  type t(a) := {
    next : &t(a);
    allocated_till : i64
  }

  let data(t : &t(a)) : &a = unsafe_cast(&t[1])
}

type t(a) := {
  a_per_chunk : i64;
  chunks : &Chunk.t(a);
  exhausted_chunks : &Chunk.t(a);
  free_list : &Free_node.t(a)
}

let main() := {
  Stdlib.print_int(sizeof[Chunk.t(i64)]);
  0
}